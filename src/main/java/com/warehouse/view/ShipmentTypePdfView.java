package com.warehouse.view;

import com.lowagie.text.*;
import com.lowagie.text.Font;
import com.lowagie.text.Image;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfTable;
import com.lowagie.text.pdf.PdfWriter;
import com.warehouse.model.ShipmentType;
import org.springframework.web.servlet.view.document.AbstractPdfView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import java.awt.*;
import java.util.List;
import java.util.Map;

public class ShipmentTypePdfView extends AbstractPdfView {
    @Override
    protected void buildPdfMetadata(Map<String, Object> model,
                                    Document document,
                                    HttpServletRequest request) {

        // Setting header of pdf
        HeaderFooter header = new HeaderFooter(new Phrase("SHIPMENT TYPE PDF VIEW"), false);
        header.setAlignment(Element.ALIGN_CENTER);
        document.setHeader(header);

        // Setting the Footer of the pdf

        HeaderFooter footer = new HeaderFooter(new Phrase("GENERATED BY Purushottam"), null);
        footer.setAlignment(Element.ALIGN_RIGHT);
        document.setFooter(footer);
    }

    @Override
    protected void buildPdfDocument(Map<String, Object> map,
                                    Document document,
                                    PdfWriter pdfWriter,
                                    HttpServletRequest request,
                                    HttpServletResponse response) throws Exception {

        response.setHeader("Content-Disposition", "attachment;filename=ShipmentType.pdf");

        //read image from Internet location
        //https://imgbb.com/
        //Image img = Image.getInstance("https://i.ibb.co/zJCmL8W/logo.png");
        Image img = Image.getInstance("https://s3-ap-southeast-1.amazonaws.com/tv-prod/member/photo/745494-large.jpg");
        //set width and height
        img.scaleAbsolute(250, 40);
        //set alignment
        img.setAlignment(Element.ALIGN_CENTER);
        //add to document
        document.add(img);

        Font titleFont = new Font(Font.TIMES_ROMAN, 22, Font.BOLD, new Color(255, 0, 102));

        Paragraph p = new Paragraph("Shipment Type Data Pdf", titleFont);
        p.setAlignment(Element.ALIGN_CENTER);
        p.setSpacingAfter(10.2f);

        //font for table heading
        Font tableFont = new Font(Font.TIMES_ROMAN, 12, Font.BOLD, new Color(114, 153, 51));


        PdfPTable pdfTable = new PdfPTable(6); // Table
        pdfTable.addCell(new Phrase("ID", tableFont));
        pdfTable.addCell(new Phrase("MODE", tableFont));
        pdfTable.addCell(new Phrase("CODE", tableFont));
        pdfTable.addCell(new Phrase("ENABLE", tableFont));
        pdfTable.addCell(new Phrase("GRADE", tableFont));
        pdfTable.addCell(new Phrase("NOTE", tableFont));

        List<ShipmentType> shipmentTypeList = (List<ShipmentType>) map.get("list");
        for (ShipmentType shipmentType : shipmentTypeList) {
            pdfTable.addCell(shipmentType.getId().toString());
            pdfTable.addCell(shipmentType.getShipmentMode());
            pdfTable.addCell(shipmentType.getShipmentCode());
            pdfTable.addCell(shipmentType.getEnableShipment());
            pdfTable.addCell(shipmentType.getShipmentGrade());
            pdfTable.addCell(shipmentType.getDescription());
        }

        document.add(p);
        document.add(pdfTable);


    }
}
